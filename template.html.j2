<!doctype html>
<html lang=en>

<head>
    <meta charset=utf-8>
    <title>Rita Kirkman Patreon Index</title>
    <link rel="stylesheet" href="patreon.css">
</head>

<body>
    <!-- including divs to contain every thumbnail media embed -->
    {% for post in posts %}
        {% if post["data"]["attributes"]["icon_type"] == "speedvideo" or post["data"]["attributes"]["icon_type"] == "gif" %}
            <div class="viewport_{{posts.index(post)}}">
                <video id="video_{{posts.index(post)}}" class="fade" loop>
                    <source src="{{post["data"]["attributes"]["title_slug"]}}_processed.webm" type="video/webm">
                    Your browser does not support HTML5 video.
                </video>
            </div>
        {% elif post["data"]["attributes"]["icon_type"] == "image" or post["data"]["attributes"]["icon_type"] == "video" or post["data"]["attributes"]["icon_type"] == "link" %}
            <div class="viewport_{{posts.index(post)}}">
                <img id="img_{{posts.index(post)}}" class="fade" src="{{post["data"]["attributes"]["title_slug"]}}_processed.jpg" alt="image not found">
            </div>
        {% endif %}
    {% endfor %}
    <nav>
{% include 'nav.html.j2' %}
        <div id="pagename">list of {{filename}} posts</div>
    </nav>
    <div class="subheader">
        <div class="date">
            <input type="text" id="searchInput" placeholder="Search this list by post title...">
            <i class="fa-solid fa-xmark"></i>
        </div>
        <div class="date" id="dateText">
            Last updated {{date}}.<br><br>
        </div>
    </div>
    <div class="posts">
        <ul id="postslist">
        <!-- python jinja2 iterates every tag to create a long list of links -->
        {% for post in posts %}
        <li>
            <img class="icon" src="{{post["data"]["attributes"]["icon_type"]}}.png" alt="image not found">
            <a target="_blank" class="post_{{posts.index(post)}}" href="{{post["data"]["attributes"]["url"]}}">{{post["data"]["attributes"]["title"]}}</a><br>
        </li>
        {% endfor %}
        </ul>
        <div class="footer"></div>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://s0.2mdn.net/ads/studio/cached_libs/gsap_3.9.1_min.js"></script>
    <script>
        const searchInput = document.getElementById('searchInput');
        const lists = document.querySelectorAll('#postslist li');
        const xmarkIcon = document.querySelector('.fa-xmark');
        const updateDisplay = () => {
            const searchTerm = searchInput.value.trim().toLowerCase();
            lists.forEach(item => {
                const languageName = item.textContent.toLowerCase();
                item.style.display = languageName.includes(searchTerm) ? 'block' : 'none';
            });
        }

        searchInput.addEventListener('input', updateDisplay);
        xmarkIcon.addEventListener('click', () => {
            searchInput.value = ''
            updateDisplay();
        });
    </script>
    <script>
        {% for post in posts %}
            {% if post["data"]["attributes"]["icon_type"] == "speedvideo" or post["data"]["attributes"]["icon_type"] == "gif" or post["data"]["attributes"]["icon_type"] == "image" or post["data"]["attributes"]["icon_type"] == "video" or post["data"]["attributes"]["icon_type"] == "link" %}
                var viewport_{{posts.index(post)}} = document.getElementsByClassName('viewport_{{posts.index(post)}}')[0];
                var post_{{posts.index(post)}} = document.getElementsByClassName('post_{{posts.index(post)}}')[0];
                // for videos, muting is necessary because autoplaying videos with audio are not allowed
                {% if post["data"]["attributes"]["icon_type"] == "speedvideo" or post["data"]["attributes"]["icon_type"] == "gif" %}
                    var media_{{posts.index(post)}} = document.getElementById('video_{{posts.index(post)}}');
                    media_{{posts.index(post)}}.muted = true;
                {% elif post["data"]["attributes"]["icon_type"] == "image" or post["data"]["attributes"]["icon_type"] == "video" or post["data"]["attributes"]["icon_type"] == "link" %}
                    var media_{{posts.index(post)}} = document.getElementById('img_{{posts.index(post)}}');
                {% endif %}
                post_{{posts.index(post)}}.addEventListener('mouseover', function() { show_{{posts.index(post)}}(1) }, false);
                post_{{posts.index(post)}}.addEventListener('mouseout', function() { show_{{posts.index(post)}}(0) }, false);
                
                // play the video without audio
                function show_{{posts.index(post)}}(opacity) {
                    {% if post["data"]["attributes"]["icon_type"] == "speedvideo" or post["data"]["attributes"]["icon_type"] == "gif" %}
                        var aspect_ratio_{{posts.index(post)}} = media_{{posts.index(post)}}.videoWidth / media_{{posts.index(post)}}.videoHeight;
                        var landscape_{{posts.index(post)}} = media_{{posts.index(post)}}.videoWidth > media_{{posts.index(post)}}.videoHeight;
                        if (opacity) {
                            media_{{posts.index(post)}}.play();
                        } else {
                            media_{{posts.index(post)}}.pause();
                        }
                    {% elif post["data"]["attributes"]["icon_type"] == "image" or post["data"]["attributes"]["icon_type"] == "video" or post["data"]["attributes"]["icon_type"] == "link" %}
                        var aspect_ratio_{{posts.index(post)}} = media_{{posts.index(post)}}.naturalWidth / media_{{posts.index(post)}}.naturalHeight;
                        var landscape_{{posts.index(post)}} = media_{{posts.index(post)}}.naturalWidth > media_{{posts.index(post)}}.naturalHeight;
                    {% endif %}
                    // change the opacity whenever the show status changes 
                    TweenLite.to(viewport_{{posts.index(post)}}, 0, {
                        css: {
                            opacity: opacity
                        }
                    });
                    if (landscape_{{posts.index(post)}}) {
                        TweenLite.to(viewport_{{posts.index(post)}}, 0, {clearProps:"height"})
                        TweenLite.to(viewport_{{posts.index(post)}}, 0, {
                            css: {
                                width: 300,
                                'aspect-ratio': aspect_ratio_{{posts.index(post)}}
                            }
                        });
                    } else {
                        TweenLite.to(viewport_{{posts.index(post)}}, 0, {clearProps:"width"})
                        TweenLite.to(viewport_{{posts.index(post)}}, 0, {
                            css: {
                                height: 300,
                                'aspect-ratio': aspect_ratio_{{posts.index(post)}}
                            }
                        });
                    }
                }
            {% endif %}
        {% endfor %}
        // move the media's viewport
        $(window).on('mousemove', move);
        function move(e) {
            // position it relative to the cursor
            {% for post in posts if post["data"]["attributes"]["icon_type"] == "speedvideo" or post["data"]["attributes"]["icon_type"] == "gif" or post["data"]["attributes"]["icon_type"] == "image" or post["data"]["attributes"]["icon_type"] == "video" or post["data"]["attributes"]["icon_type"] == "link" %}
                TweenLite.to(viewport_{{posts.index(post)}}, 0, {x:e.pageX + 5,y:e.pageY + 15});
            {% endfor %}
        }
    </script>

</body>
</html>
